# 激活多环境配置文件
#spring.profiles.active=dev
spring.profiles.active=dev
# 服务器的HTTP端口，默认为80
server.port=9399
# 应用的访问路径
server.servlet.context-path=/
# tomcat的URI编码
server.tomcat.uri-encoding=UTF-8
# tomcat最大线程数，默认为200
server.tomcat.max-threads=800
# Tomcat启动初始化的线程数，默认值25
server.tomcat.min-spare-threads=30

# 设置开启热部署
spring.devtools.restart.enabled = true

# 放行静态资源
spring.mvc.static-path-pattern=/static/**

# 搜索指定别名
mybatis.type-aliases-package=com.fdh.**.entity
# 加载mapper文件
mybatis.mapper-locations=classpath*:mapper/**/*Mapper.xml

# thymeleaf模板配置
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false

# jackson序列化
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8
spring.jackson.joda-date-time-format=yyyy-MM-dd HH:mm:ss

# 文件上传相关
# 单个文件大小
spring.servlet.multipart.max-file-size=10MB
# 总上传的文件大小
spring.servlet.multipart.max-request-size=20MB

# pageHelper配置

# 数据源配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 初始连接数
spring.datasource.druid.initial-size=5
# 最小连接池数
spring.datasource.druid.min-idle=10
# 最大连接池数
spring.datasource.druid.max-active=20
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 配置一个连接在池中最大生存的时间，单位是毫秒
spring.datasource.druid.max-evictable-idle-time-millis=300000
# 配置检测连接是否有效
spring.datasource.druid.validation-query=select 1 from dual
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.stat-view-servlet.enabled=true
# 设置白名单，不填则允许所有访问
spring.datasource.druid.stat-view-servlet.allow=
spring.datasource.druid.stat-view-servlet.url-pattern=/monitor/druid/*

spring.datasource.druid.filter.stat.enabled=true
# 慢SQL记录
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=1000
spring.datasource.druid.filter.stat.merge-sql=true
spring.datasource.druid.filter.wall.config.multi-statement-allow=true


# shiro
shiro.user.loginUrl=/login
shiro.user.unauthorizedUrl=/unauth
shiro.user.indexUrl=/index
shiro.user.captchaEnabled=true

# 设置Cookie的域名 默认空，即当前访问的域名
shiro.cookie.domain=
# 设置cookie的有效访问路径
shiro.cookie.path=/
# 设置HttpOnly属性
shiro.cookie.http-only=true
# 设置Cookie的过期时间，天为单位
shiro.cookie.max-age=30


# Session超时时间（默认30分钟）
shiro.session.expire-time=30
# 同步session到数据库的周期（默认1分钟）
shiro.session.db-sync-period=1
# 相隔多久检查一次session的有效性，默认就是10分钟
shiro.session.validation-interval=10

# custom
boss.address-enabled=true


# 代码生成
gen.author=fdh
gen.packageName=com.fdh
gen.autoRemovePre=false
gen.tablePrefix=sys_


# 日志配置
logging.level.root = info
logging.level.com.fdh = debug
logging.level.org.mybatis = debug
logging.level.java.sql=debug
logging.pattern.console = %clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}

